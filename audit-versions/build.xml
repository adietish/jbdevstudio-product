<project default="build" name="jbds aggregate sources build.xml">
	<!-- if ${WORKSPACE}/site folder exists, target that folder; else generate here. -->
	<condition property="output.dir" value="${WORKSPACE}/results" else="${basedir}">
		<available file="${WORKSPACE}/results" />
	</condition>

	<condition property="COMMON_TOOLS" value="/home/hudson/static_build_env/jbds/tools" else="${java.io.tmpdir}">
		<available file="/home/hudson/static_build_env/jbds" type="dir" />
	</condition>
	<mkdir dir="${COMMON_TOOLS}" />

	<property name="tmpdir" value="${java.io.tmpdir}/jbds-results-build" />

	<target name="get.ant-contrib" unless="ant-contrib.jar.exists">
		<property name="ANTCONTRIB_MIRROR" value="http://sourceforge.net/projects/ant-contrib/files/ant-contrib/ant-contrib-1.0b2" />
		<get usetimestamp="true" dest="${COMMON_TOOLS}/ant-contrib-1.0b2-bin.zip" src="${ANTCONTRIB_MIRROR}/ant-contrib-1.0b2-bin.zip" />
		<touch file="${COMMON_TOOLS}/ant-contrib-1.0b2-bin.zip" />
		<mkdir dir="${java.io.tmpdir}/ant-contrib-1.0b2-bin.zip_" />
		<unzip src="${COMMON_TOOLS}/ant-contrib-1.0b2-bin.zip" dest="${java.io.tmpdir}/ant-contrib-1.0b2-bin.zip_" overwrite="true" />
		<copy file="${java.io.tmpdir}/ant-contrib-1.0b2-bin.zip_/ant-contrib/lib/ant-contrib.jar" tofile="${COMMON_TOOLS}/ant-contrib.jar" failonerror="true" />
		<delete dir="${java.io.tmpdir}/ant-contrib-1.0b2-bin.zip_" includeemptydirs="true" quiet="true" />
	</target>

	<target name="init">
		<echo level="verbose">
This script requires Ant 1.8+ and JDK 1.6+.
-------------------------------------------
$ant.version = ${ant.version}
$ant.home = ${ant.home}
$ant.java.version = ${ant.java.version}
$java.home = ${java.home}</echo>
		<available file="${COMMON_TOOLS}/ant-contrib.jar" type="file" property="ant-contrib.jar.exists" />
		<antcall target="get.ant-contrib" />
		<taskdef resource="net/sf/antcontrib/antlib.xml">
			<classpath>
				<pathelement location="${COMMON_TOOLS}/ant-contrib.jar" />
			</classpath>
		</taskdef>

		<mkdir dir="${tmpdir}" />
		<delete dir="target/" quiet="true" />
		<mkdir dir="target/" />
	</target>

	<target name="build" depends="init">
		<antcall target="get.versions">
			<param name="sourceRepo" value="/home/nboldt/tmp/product-update-JBDS4.1.2-2012-04-17_16-33-31-H1111.zip_/"/>
			<param name="reportFile" value="/home/nboldt/tmp/product-update-JBDS4.1.2-2012-04-17_16-33-31-H1111.zip__audit.xml"/>
			<param name="includePlugins" value="false"/>
		</antcall>
		<antcall target="get.versions">
			<param name="sourceRepo" value="/home/nboldt/tmp/product-Update-JBDS5.0.0-2012-06-13_18-47-20-H212.zip_/"/>
			<param name="reportFile" value="/home/nboldt/tmp/product-Update-JBDS5.0.0-2012-06-13_18-47-20-H212.zip__audit.xml"/>
			<param name="includePlugins" value="false"/>
		</antcall>
		
		<antcall target="apitooling.analysis"/>
	</target>
	<target name="get.versions" depends="init">
		<property name="sourceRepo" value="/home/nboldt/33xx/product/site/target/site/"/>
		<property name="reportFile" value="target/audit.xml"/>
		<property name="includePlugins" value="true"/>

		<!-- get the versions of all the plugins/features in the site to be able to diff w/ previous release -->
		<echo file="${reportFile}" message="&lt;features&gt;${line.separator}"/>
		<for param="file">
			<path>
				<sort>
					<fileset id="site.features" dir="${sourceRepo}" includes="features/*.jar"/>
					<name/>
				</sort>
			</path>
			<sequential>
				<propertyregex property="filename" input="@{file}" defaultvalue="@{file}" regexp=".+/([^/]+)" replace="\1"/>
				<echo>[F] ${filename}</echo>
				<echo append="true" file="${reportFile}" message="  &lt;feature filename=&quot;${filename}&quot;&gt;${line.separator}"/>
				<!-- unzip the feature and look for contained plugins -->
				<if>
					<equals arg1="${includePlugins}" arg2="true"/>
					<then>
						<unzip src="@{file}" dest="${tmpdir}/${filename}_" overwrite="true">
							<patternset><include name="**/feature.xml"/></patternset>
						</unzip>
						<loadfile property="feature.xml" srcfile="${tmpdir}/${filename}_/feature.xml"/>
						<echo level="verbose">${feature.xml}</echo>
						<for param="file2">
							<path>
								<sort>
									<fileset id="site.plugins" dir="${sourceRepo}" includes="plugins/*.jar"/>
									<name/>
								</sort>
							</path>
							<sequential>
								<propertyregex property="filename2" input="@{file2}" defaultvalue="@{file2}" regexp=".+/([^/]+)" replace="\1"/>
								<propertyregex property="pluginname" input="${filename2}" defaultvalue="${filename2}" regexp="([^/]+)_([0-9.]+).*.jar" replace="\1"/>
								<echo level="debug">Searching for ${pluginname}...</echo>
								<if>
									<contains string="${feature.xml}" substring="&quot;${pluginname}&quot;"/>
									<then>
										<echo append="true" file="${reportFile}" message="    &lt;plugin filename=&quot;${filename2}&quot;/&gt;${line.separator}"/>
									</then>
								</if>
								<var name="filename2" unset="true"/>
								<var name="pluginname" unset="true"/>
							</sequential>
						</for>
						<var name="feature.xml" unset="true"/>
						<delete dir="${tmpdir}/${filename}_"/>
					</then>
				</if>
				<echo append="true" file="${reportFile}" message="  &lt;/feature&gt;${line.separator}"/>
				<var name="filename" unset="true"/>
			</sequential>
		</for>
		<echo append="true" file="${reportFile}" message="&lt;/features&gt;${line.separator}"/>

		<echo>Report generated in ${reportFile}</echo>
		<antcall target="cleanup"/>
	</target>

	<!-- must be run from within Eclipse, eg.:
			java -jar ~/eclipse/37clean/eclipse/plugins/org.eclipse.equinox.launcher_*.jar \
				-data /tmp/workspace -consolelog  -application org.eclipse.ant.core.antRunner -f build.xml p2.mirror.jar.comparator
	-->
	<target name="p2.mirror.jar.comparator" description="does not work - no results produced">
		<property name="sourceRepo" value="/home/nboldt/33xx/product/site/target/site/"/>
		<property name="targetRepo" value="/home/nboldt/33xx/product/results/target/targetRepo/"/>
		<property name="buildlogs" value="${tmpdir}"/>
		<property name="p2.repo.name" value="this.repo"/>
		<property name="baselineRepo" value="/home/nboldt/tmp/JBossTools/jbosstools-3.2.2.Final.aggregate-Update-2011-11-14_23-06-23-H1430.zip_/"/>

		<p2.mirror source="file:${sourceRepo}" ignoreErrors="true" log="${buildlogs}/mirrorlog.txt">
			<destination compressed="true" name="${p2.repo.name}" location="file:${targetRepo}" append="true" />
			<comparator comparator="org.eclipse.equinox.p2.repository.tools.jar.comparator" comparatorLog="${buildlogs}/comparatorlog.txt">
			<repository location="file:${baselineRepo}" />
			</comparator>
		</p2.mirror>
	</target>

	<!-- must be run from within Eclipse, eg.:
			java -jar ~/eclipse/37clean/eclipse/plugins/org.eclipse.equinox.launcher_*.jar \
				-data /tmp/workspace -consolelog  -application org.eclipse.ant.core.antRunner -f build.xml apitooling.analysis
	-->
	<target name="apitooling.analysis" depends="init">
		<!--
			<property name="baseline" value="/home/nboldt/tmp/JBossTools/jbosstools-3.2.2.Final.aggregate-Update-2011-11-14_23-06-23-H1430.zip_/"/> 
			<property name="profile" value="/home/nboldt/tmp/Eclipse_Bundles/eclipse-jee-indigo-SR2-linux-gtk-x86_64.tar.gz"/>
		-->
		<property name="baseline" value="/home/nboldt/jbdevstudio-product-linux-gtk-x86_64-4.1.2.v201201251351R-H761-GA/studio/"/>
		<property name="profile" value="/home/nboldt/jbdevstudio-product-universal-5.0.0.v20120613-0619-H208-GA/studio/"/>
		<property name="targetRepo" value="/home/nboldt/33xx/product/results/target/targetRepo/"/>
		<property name="reportDir" value="target"/>
		<property name="filtersDir" value="filters/"/>
		<property name="includelistFile" value="include_list.txt"/>
		<property name="excludelistFile" value="exclude_list.txt"/>
		<property name="prefsFile" value="org.eclipse.pde.api.tools.prefs"/>
		<property name="debug" value="true"/>

		<apitooling.analysis baseline="${baseline}" profile="${profile}" report="${reportDir}/xml" filters="${filtersDir}" includelist="${includelistFile}" excludelist="${excludelistFile}" preferences="${prefsFile}" debug="${debug}" />
		<apitooling.analysis_reportconversion xmlfiles="${reportDir}/xml" htmlfiles="${reportDir}/html" debug="${debug}"/>
		<echo>Report generated in ${reportDir}/html/index.html </echo>
	</target>

	<target name="cleanup">
		<delete includeemptydirs="true" quiet="true">
			<fileset dir="${tmpdir}" />
		</delete>
	</target>
</project>
